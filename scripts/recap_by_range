#!/usr/bin/env bash

# Generate a summary of git commit activity between the provided oldest commit
# and newest commit. If no newest commit, `HEAD` is used by default.

must_be_repo; rc=$?; [[ $rc -ne 0 ]] && exit $rc;

function build_line() {
    # summarize each commit
    tag="$1"
    message="$2"

    subject=$( echo $message | cut -d\| -f2 )
    ticket=$( which_tix "$subject" )
    url=$( tix -o "$ticket" )

    author=$( echo $message | cut -d\| -f3 )

    if [[ $MARKDOWN -eq 1 ]]; then
        line="- [*\`$tag\`*](https://$origin_url/$tag)"
        if [[ "$url" != "TRIVIAL" ]]; then
            line="$line [$subject]($url)"
        else
            line="$line $subject"
        fi
        echo "$line $author"
    elif [[ "$ticket" -eq "TRIVIAL" ]]; then
        echo "$tag $url ${subject/$ticket} $author"
    else
        echo "$tag $url ${subject/$ticket } $author"
    fi
}

for ARGUMENT in "$@"; do
    KEY=$( echo $ARGUMENT | cut -f1 -d= )
    VALUE=$( echo $ARGUMENT | cut -f2 -d= )

    case "$KEY" in
        --reverse)  REVERSE=1       ;;
        --newest)   NEWEST=${VALUE} ;;
        --oldest)   OLDEST=${VALUE} ;;
        --output)
            case "$VALUE" in
                md) MARKDOWN=1  ;;
                *)              ;;
            esac                    ;;
        *)                          ;;
    esac
done

[[ -z "$OLDEST" ]] \
    && echo "Don't know how far back to start summarizing. Exiting" \
    && exit 1

[[ -z "$NEWEST" ]] && NEWEST="HEAD"

FORMAT='%h|%s|(Committed %cs by %ce, authored by %ae)'
if [[ $MARKDOWN -eq 1 ]]; then
    FORMAT='%h|%s|(Committed %cs by %ce, authored by [%ae](mailto:%ae))'
fi

# modify SSH origin url into an https link
origin_url=$( git remote get-url origin )
origin_url=${origin_url/git@/}
origin_url=${origin_url/://}
origin_url="${origin_url/.git/}/tree"
origin_url=$( echo "$origin_url" | sed -e "s/\/\//\//" )

# "~" selects the nth (in this case 1 previous) commit before leftside commit sha
if [[ $REVERSE -eq 1 ]]; then
    DIRECTION="--reverse"
    TAGSORT="taggerdate"
else
    TAGSORT="-taggerdate"
fi

# if parent of OLDEST hash does not exist, use OLDEST instead of OLDEST~1
commit_msgs="$( git log --no-merges --format="$FORMAT" $DIRECTION $OLDEST~1..$NEWEST 2>&1 )"
rc=$?
[[ $rc -ne 0 ]] \
    && commit_msgs="$( git log --no-merges --format="$FORMAT" $DIRECTION $OLDEST..$NEWEST )"

while IFS= read -r message; do
    hash=$( echo $message | cut -d\| -f1 )
    tags=$( git --no-pager tag --sort=$TAGSORT --points-at $hash )
    [[ -z "$tags" ]] && tags="$hash"

    for tag in $tags; do
        build_line "$tag" "$message";
    done
done <<< "$commit_msgs"
