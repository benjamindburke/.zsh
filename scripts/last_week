#!/usr/bin/env bash

format='%h|%s (%cr by %ae)'
today=$( date '+%F' )
eight_days_ago=$( date -v-8d '+%F' )

# update the repository, silently
git_up > /dev/null 2>&1

# gather range of commit hashes and subjects after 2 days ago and before today
AUTHORED="$@"
if [[ ! -z "$AUTHORED" ]]; then
    # if anything passed to script, only get logs I myself committed
    commit_msgs="$( git log --no-merges --format="$format" --since=$eight_days_ago --before=$today --committer="$( git config --get user.email )" )"
else
    # otherwise, get logs committed by anyone
    commit_msgs="$( git log --no-merges --format="$format" --since=$eight_days_ago --before=$today )"
fi

# gather range of commit hashes and subjects between 2 days ago and today
while IFS= read -r message; do
    # summarize each commit
    commit=$( echo $message | cut -d\| -f1 )

    tag=$( git tag --points-at $commit )
    [[ -z "$tag" ]] && tag="$commit"

    message=$( echo $message | cut -d\| -f2 )
    ticket=$( which_tix "$message" )
    url=$( tix -o "$ticket" )

    # if no commit or message, don't output anything
    [[ -z "$commit" || -z "$message" ]] && break

    echo "$tag $url ${message/$ticket}"
done <<< "$commit_msgs"
